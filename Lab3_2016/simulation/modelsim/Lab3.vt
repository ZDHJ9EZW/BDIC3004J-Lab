// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "12/08/2019 21:38:47"
                                                                                
// Verilog Test Bench template for design : Lab3
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ps/ 1 ps
module Lab3_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk;
reg clk20mhz;
reg [1:0] gears;
reg pause;
reg start;
reg stop;
// wires                                               
wire [12:0]  distance;
wire dp;
wire [12:0]  money;
wire [7:0]  scan;
wire [6:0]  seg7;

// assign statements (if any)                          
Lab3 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clk20mhz(clk20mhz),
	.distance(distance),
	.dp(dp),
	.gears(gears),
	.money(money),
	.pause(pause),
	.scan(scan),
	.seg7(seg7),
	.start(start),
	.stop(stop)
);

	initial 
		begin
		//The test finishes after one hour.
		#3600000000 $finish;
		end

	initial 
		begin
		//The period of the clock, clk, is 4ns.
		//Every 2ns, clk changes from HIGH to LOW or from LOW to HIGH.
		clk = 1'b1;
		forever #2 clk = ~clk;
		end
	
	initial
		begin
		//The period of the clock, clk20mhz, is 2ns.
		//Every 1ns, clk changes from HIGH to LOW or from LOW to HIGH.
		//Therefore, the period of clk1khz is 4ns. 
		clk20mhz = 1'b1;
		forever #1 clk20mhz = ~clk20mhz;
		end
	
	initial
		begin
		//At the begining, the car is stationary.
		//Therefore, set start, stop and pause to LOW.
		start = 1'b1;
		stop = 1'b0;
		pause = 1'b0;
		//Start the car.
		#5 start = 1'b0;
		//Test the first gear condition.
		gears = 2'b00;
		//Assume that this journey is ending at 175ns 
		//for testing whether stop signal works.
		#170 stop = 1'b1;
		#10 stop = 1'b0;
		//Start the car and assume that pause occurs at 245ns
		//for testing wheather pause signal works.
		#10 start = 1'b1;
		#10 start = 1'b0;
		#40 pause = 1'b1;
		#10 pause = 1'b0;

		//Test the second gear condition.
		#60500 stop = 1'b1;
		#10 stop = 1'b0;
		#2 start = 1'b1;
		#5 start = 1'b0;
		#2 gears = 2'b01;

		//Test the third gear condition.
		#30500 stop = 1'b1;
		#10 stop = 1'b0;
		#2 start = 1'b1;
		#5 start = 1'b0;
		#2 gears = 2'b10;

		//Test the fourth gear condition.
		#20500 stop = 1'b1;
		#10 stop = 1'b0;
		#2 start = 1'b1;
		#5 start = 1'b0;
		#2 gears = 2'b11;
		end
endmodule

